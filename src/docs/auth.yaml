openapi: 3.0.0
info:
  title: API de Autenticación
  version: 1.0.0
  description: API para manejar autenticación de usuarios

components:
  schemas:
    UserRegister:
      type: object
      properties:
        first_name:
          description: Nombre del usuario
          type: string
        last_name:
          description: Apellido del usuario
          type: string
        email:
          description: Correo electrónico del usuario
          type: string
          format: email
        password:
          description: Contraseña para iniciar sesión
          type: string
        age:
          description: Edad del usuario
          type: number
      required:
        - first_name
        - last_name
        - email
        - password
        - age
      example:
        first_name: Patricia
        last_name: Gomez
        email: pato@gmail.com
        password: hola1234
        age: 32

    UserProfile:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        age:
          type: number
        role:
          type: string
      example:
        first_name: Patricia
        last_name: Gomez
        email: pato@gmail.com
        age: 32
        role: ADMIN

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
      example:
        email: igna@coder.com
        password: hola1234

    LoginResponse:
      type: object
      properties:
        method:
          type: string
        url:
          type: string
        response:
          type: string
      example:
        method: post
        url: /api/auth/login
        response: Logged in

    LogoutResponse:
      type: object
      properties:
        method:
          type: string
        url:
          type: string
        response:
          type: string
      example:
        method: get
        url: /api/auth/logout
        response: Logged out

    error400:
      type: object
      properties:
        method:
          description: Método con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/login
        error: Invalid data

    error401:
      type: object
      properties:
        method:
          description: Método con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/login
        error: Invalid credentials

    error403:
      type: object
      properties:
        method:
          description: Método con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/me
        error: Forbidden

    error500:
      type: object
      properties:
        method:
          description: Método con el cual se realizó la solicitud
          type: string
        url:
          description: Ruta a la cual se realizó la solicitud
          type: string
        error:
          description: Mensaje de error de la operación
          type: string
      example:
        method: post
        url: /api/auth/me
        error: Fatal error

securitySchemes:
  cookieAuth:
    type: apiKey
    in: cookie
    name: jwt

paths:
  /api/auth/login:
    post:
      summary: Inicia la sesión de un usuario, guardando el token en una cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: Éxito en el inicio de sesión
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
              example: jwt=token_value; HttpOnly; Path=/; Max-Age=3600
        400:
          description: Falta de algún dato válido para el inicio de sesión
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error400'
        401:
          description: Credenciales inválidas para el inicio de sesión
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error401'
        500:
          description: Error del lado del servidor al iniciar sesión
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error500'

  /api/auth/register:
    post:
      summary: Registra un nuevo usuario en el sistema
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        201:
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    type: string
                  url:
                    type: string
                  response:
                    type: string
                example:
                  method: post
                  url: /api/auth/register
                  response: User created
        400:
          $ref: '#/components/responses/error400'
        500:
          $ref: '#/components/responses/error500'

  /api/auth/logout:
    get:
      summary: Cierra la sesión del usuario actual (elimina la cookie)
      tags:
        - Auth
      security:
        - cookieAuth: []
      responses:
        200:
          description: Sesión cerrada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
              example: jwt=; HttpOnly; Path=/; Max-Age=0
        500:
          $ref: '#/components/responses/error500'

  /api/auth/profile:
    get:
      summary: Obtiene el perfil del usuario autenticado
      tags:
        - Auth
      security:
        - cookieAuth: []
      responses:
        200:
          description: Perfil del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    type: string
                  url:
                    type: string
                  response:
                    $ref: '#/components/schemas/UserProfile'
                example:
                  method: get
                  url: /api/auth/profile
                  response:
                    first_name: Patricia
                    last_name: Gomez
                    email: pato@gmail.com
                    age: 32
                    role: ADMIN
        401:
          $ref: '#/components/responses/error401'
        403:
          $ref: '#/components/responses/error403'
        500:
          $ref: '#/components/responses/error500'